name: CI CD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: Build
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Unit Tests
        run: yarn test
      
      - name: Run Build
        run: yarn build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: build-artifact
          path: dist

  release:
    name: Release
    needs: build
    # if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Update release version and changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

      - name: Create release.json
        run: |
          PACKAGE_VERSION=$(bash ./scripts/get-json-value.sh version package.json)
          
          echo '{ "version": "${PACKAGE_VERSION}" }' > .release.json

      - name: Upload Version Artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-json-artifact
          path: .release.json

  deploy:
    name: Deploy to GH-Pages
    needs: release
    # if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
        
      - name: Download Build Artifact
        uses: actions/download-artifact@v1
        with:
          name: build-artifact
          path: .

      - name: Download Version Artifact
        uses: actions/download-artifact@v1
        with:
          name: release-json-artifact
          path: .

      - name: Set Git User
        run: |
          # git config --local user.email "email.gabriel.lima@gmail.com"
          git config --local user.email
          # git config --local user.name "Gabriel Lima"
          git config --local user.name
      
      - name: Git Commit and Push
        run: |
          PACKAGE_VERSION=$(bash ./scripts/get-json-value.sh version .release.json)
          
          # git add .
          # git commit -m 
          echo "chore(release): v${PACKAGE_VERSION}"
          # git push -f
        shell: bash 
      