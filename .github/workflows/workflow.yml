name: CI CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Unit Tests
        run: yarn test
      
      - name: Run Build
        run: yarn build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: build-artifact
          path: dist

  release:
    name: Release
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.release_bot_github_token}}
          GIT_AUTHOR_NAME: ${{ secrets.release_bot_git_name }}
          GIT_AUTHOR_EMAIL: ${{ secrets.release_bot_git_email }}
          GIT_COMMITTER_NAME: ${{ secrets.release_bot_git_name }}
          GIT_COMMITTER_EMAIL: ${{ secrets.release_bot_git_email }}

      - name: Create release.json
        run: |
          PACKAGE_VERSION=$(bash ./scripts/get-json-value.sh version package.json)
          echo '{ "version": "'${PACKAGE_VERSION}'" }' > .release.json

      - name: Upload Version Artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-json-artifact
          path: .release.json

  deploy:
    name: Deploy to GH-Pages
    needs: release
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
        
      - name: Download Build Artifact
        uses: actions/download-artifact@v1
        with:
          name: build-artifact
          path: .

      - name: Download Version Artifact
        uses: actions/download-artifact@v1
        with:
          name: release-json-artifact
          path: .

      - name: Set Git User
        run: |
          git config --local user.email "email.gabriel.lima@gmail.com"
          git config --local user.name "Gabriel Lima"

      - name: Git Commit and Push
        run: |
          PACKAGE_VERSION=$(bash ./scripts/get-json-value.sh version .release.json)

          git add .
          git commit -m"chore(release): v${PACKAGE_VERSION}"
          git push -f
        shell: bash 
      