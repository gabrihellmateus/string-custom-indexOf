name: CI CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Unit Tests
        run: yarn test
      
      - name: Run Build
        run: yarn build

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist-artifact
          path: dist

  release:
    name: Release
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Update release version and changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

      - name: Create version.txt
        run: |
          echo $(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]') > version.txt

      - name: Upload Version Artifact
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: version.txt

  deploy:
    name: Deploy to GH-Pages
    needs: release
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
        
      - name: Download build Artifact
        uses: actions/download-artifact@v1
        with:
          name: dist-artifact
          path: .

      - name: Download Version Artifact
        uses: actions/download-artifact@v1
        with:
          name: version
          path: .

      - name: Set Git User
        run: |
          git config --local user.email "email.gabriel.lima@gmail.com"
          git config --local user.name "Gabriel Lima"
      
      - name: Git Commit and Push
        run: |
          PACKAGE_VERSION=$(cat version.txt)
          
          git add .
          git commit -m "chore(release): v${PACKAGE_VERSION}"
          git push -f
        shell: bash 
      